// Generated by CoffeeScript 1.6.2
var makeLink, mesureWidth, signiture;

mesureWidth = function(str, style) {
  var element, width;

  element = $("<div style=\"position: absolute; " + style + "\">" + str + "</div>");
  element.appendTo(document.body);
  width = element.width();
  element.remove();
  return width;
};

makeLink = function(str) {
  if (str[0] === '@') {
    return "https://twitter.com/" + (str.substring(1));
  } else {
    return "tel:" + str;
  }
};

signiture = function(_arg) {
  var email, emailWidth, field1, field1Label, field1TagWidth, field1Width, field2, field2Label, field2TagWidth, field2Width, hasField2, height, infoWidth, line1Width, line2Width, line3Width, line4Width, lineHeight, logoSpacer, metamarketsWidth, mmx, name, nameWidth, position, positionWidth, signitureStr, spacerExtra, spacerWidth, table, tableAndRow, td, tdSpecer, tr;

  name = _arg.name, position = _arg.position, field1Label = _arg.field1Label, field1 = _arg.field1, field2Label = _arg.field2Label, field2 = _arg.field2, email = _arg.email;
  if (!/^[\w' -]+$/.test(name)) {
    return "Invalid name";
  }
  height = 52;
  logoSpacer = 6;
  lineHeight = 13;
  spacerWidth = 3;
  spacerExtra = 5;
  mmx = 'METAMARKETS';
  field1TagWidth = mesureWidth(field1Label, 'font-size:11px; font-weight:bold; font-family:Helvetica,Arial,Sans-Serif') + 5;
  field2TagWidth = mesureWidth(field2Label, 'font-size:11px; font-weight:bold; font-family:Helvetica,Arial,Sans-Serif') + 5;
  nameWidth = mesureWidth(name, 'font-size:11px; font-weight:bold;   font-family:Helvetica,Arial,Sans-Serif') + 5;
  positionWidth = mesureWidth(position, 'font-size:11px; font-weight:normal; font-family:Helvetica,Arial,Sans-Serif');
  metamarketsWidth = mesureWidth(mmx, 'font-size:11px; font-weight:normal; font-family:Helvetica,Arial,Sans-Serif');
  field1Width = mesureWidth(field1, 'font-size:11px; font-weight:normal; font-family:Helvetica,Arial,Sans-Serif') + 2;
  field2Width = mesureWidth(field2, 'font-size:11px; font-weight:normal; font-family:Helvetica,Arial,Sans-Serif') + 2;
  emailWidth = mesureWidth(email, 'font-size:11px; font-weight:normal; font-family:Helvetica,Arial,Sans-Serif') + 5;
  hasField2 = field2Label !== '-' && field2 !== '';
  line1Width = nameWidth;
  line2Width = positionWidth + spacerExtra + spacerWidth + spacerExtra + metamarketsWidth;
  line3Width = field1TagWidth + field1Width + spacerExtra + (hasField2 ? spacerWidth + spacerExtra + field2TagWidth + field2Width : 0);
  line4Width = emailWidth;
  infoWidth = Math.max(line1Width, line2Width, line3Width, line4Width);
  table = function(_arg1) {
    var height, html, style, width;

    width = _arg1.width, height = _arg1.height, html = _arg1.html, style = _arg1.style;
    style || (style = '');
    return "<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"border-collapse:collapse;" + style + "\">" + (html.trim()) + "</table>";
  };
  tr = function(_arg1) {
    var height, html;

    height = _arg1.height, html = _arg1.html;
    return "<tr height=" + height + ">" + (html.trim()) + "</tr>";
  };
  td = function(_arg1) {
    var html, style, width;

    width = _arg1.width, html = _arg1.html, style = _arg1.style;
    style || (style = '');
    return "<td width=" + width + "; style=\"padding:0;" + style + "\">" + (html.trim()) + "</td>";
  };
  tableAndRow = function(_arg1) {
    var height, html, style, width;

    width = _arg1.width, height = _arg1.height, html = _arg1.html, style = _arg1.style;
    return table({
      width: width,
      height: height,
      html: tr({
        height: height,
        html: html
      }),
      style: style
    });
  };
  tdSpecer = td({
    width: spacerWidth + spacerExtra,
    html: '|',
    style: 'color:#F95F39;'
  });
  signitureStr = "<br/><br/>" + tableAndRow({
    width: height + logoSpacer + infoWidth,
    height: height,
    html: td({
      width: height,
      html: "<a href=\"http://www.metamarkets.com\" target=\"_blank\">" + (logo(height)) + "</a>"
    }) + td({
      width: logoSpacer,
      html: '&nbsp;'
    }) + td({
      width: infoWidth,
      html: tableAndRow({
        width: line1Width,
        height: lineHeight,
        style: 'font-weight:bold;font-size:11px;font-family:Helvetica,Arial,Sans-Serif;white-space:nowrap',
        html: td({
          width: nameWidth,
          html: name,
          style: 'color:#333333;font-weight:bold;'
        })
      }) + tableAndRow({
        width: line2Width,
        height: lineHeight,
        style: 'font-size:11px;font-family:Helvetica,Arial,Sans-Serif;white-space:nowrap',
        html: td({
          width: positionWidth + spacerExtra,
          html: position,
          style: 'color:#666666;'
        }) + tdSpecer + td({
          width: metamarketsWidth,
          html: "<a style=\"color:#666666; text-decoration:none\" href=\"http://www.metamarkets.com\">" + mmx + "</a>"
        })
      }) + tableAndRow({
        width: line3Width,
        height: lineHeight,
        style: 'font-size:11px;font-family:Helvetica,Arial,Sans-Serif;white-space:nowrap',
        html: td({
          width: field1TagWidth,
          html: field1Label + '&nbsp;',
          style: 'color:#666666;font-weight:bold;'
        }) + td({
          width: field1Width + spacerExtra,
          html: "<a style=\"color:#666666; text-decoration:none\" href=\"" + (makeLink(field1)) + "\">" + field1 + "</a>"
        }) + (hasField2 ? tdSpecer + td({
          width: field2TagWidth,
          html: field2Label + '&nbsp;',
          style: 'color:#666666;font-weight:bold;'
        }) + td({
          width: field2Width + spacerExtra,
          html: "<a style=\"color:#666666; text-decoration:none\" href=\"" + (makeLink(field2)) + "\">" + field2 + "</a>"
        }) : '')
      }) + tableAndRow({
        width: line4Width,
        height: lineHeight,
        style: 'font-size:11px;font-family:Helvetica,Arial,Sans-Serif;white-space:nowrap',
        html: td({
          width: emailWidth,
          html: "<a style=\"color:#1c7bc3; text-decoration:none;\" href=\"mailto:" + email + "\">" + email + "</a>"
        })
      })
    })
  });
  signitureStr = signitureStr.replace(/>\s+</g, '><');
  console.log(signitureStr.length);
  if (!(signitureStr.length < 10000)) {
    return "Too long";
  }
  return signitureStr;
};
